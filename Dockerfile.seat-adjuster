# SPDX-License-Identifier: Apache-2.0

FROM ubuntu AS builder

# Ignore "pip as root" warning, since we're running in a Docker
# https://github.com/pypa/pip/pull/11035
ENV PIP_ROOT_USER_ACTION ignore

# Prevent apt-get and debconf warnings about missing TER
ENV DEBIAN_FRONTEND noninteractive

ARG TARGETPLATFORM
ARG TARGETARCH
ARG TARGETVARIANT

# "python3 python3-pip git curl wget" is required by velocitas cli
# "binutils python3-dev" is required by pyinstaller
# "python-is-python3" is a workaround for velocitas subshell not finding python
RUN apt-get update -y && apt-get install -y --no-install-recommends python3-dev python3-pip git curl wget binutils python-is-python3

RUN printf "I'm building for TARGETPLATFORM=${TARGETPLATFORM}" \
    && printf ", TARGETARCH=${TARGETARCH}" \
    && printf ", TARGETVARIANT=${TARGETVARIANT} \n" \
    && printf "With uname -s : " && uname -s \
    && printf "and  uname -m : " && uname -m

RUN pip3 install --upgrade pip
RUN pip3 install pyinstaller
RUN git clone https://github.com/eclipse-velocitas/vehicle-app-python-template.git /template
RUN git clone https://github.com/eclipse-velocitas/vehicle-app-python-sdk /sdk
RUN cp -rf /sdk/examples/seat-adjuster/* /template/app/
WORKDIR /template
RUN <<EOT bash
    if [ "amd64" = "$TARGETARCH" ]; then
        curl -L https://github.com/eclipse-velocitas/cli/releases/latest/download/velocitas-linux-x64 -o /usr/bin/velocitas
    elif [ "arm64" = "$TARGETARCH" ]; then
        curl -L https://github.com/eclipse-velocitas/cli/releases/latest/download/velocitas-linux-arm64 -o /usr/bin/velocitas
    else
        echo "ERROR: Unknown target architecture ${TARGETARCH}"
        exit 1
    fi
EOT
RUN chmod +x /usr/bin/velocitas
RUN git config --global --add safe.directory $(pwd)
RUN velocitas init --verbose
RUN pip3 install -r ./requirements.txt
RUN pip3 install --no-cache-dir ./gen/vehicle_model
WORKDIR /template/app
RUN pip3 install -r ./requirements-links.txt
RUN pip3 install -r ./requirements.txt
RUN pyinstaller --clean -F -s src/main.py

FROM ubuntu
COPY --from=builder /template/app/dist/ /dist
ENTRYPOINT [ "/dist/main" ]
